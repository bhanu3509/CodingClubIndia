#include <iostream>
#include<map>
// #include<algorithm>

using namespace std;

map<long long int,long long int> dp;

long long int max(long long int a, long long int b)
{
      return (a>b?a:b);
}

long long int solve(long long int n, map<long long int,long long int> dp)
{
      if(n<12)
      {
            dp[n] = n;
            return dp[n];
      }
      
      if(dp[n] != 0)
      {
            return dp[n];
      }
      
      long long int result = max( n, solve(n/2,dp)+solve(n/3,dp)+solve(n/4,dp) );
      dp[n] = result;
      return dp[n];
}


int main() {
	// your code goes 
	int test;
// 	cin>>test;
	while(scanf("%d",&test)!=EOF)
	{
	      long long int n;
	      cin>>n;
	      cout<<solve(n,dp)<<endl;
	}
	return 0;
}

